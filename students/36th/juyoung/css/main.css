.img__round-big {
  border-radius: 50%;
  width: 60px;
}
.img__round-medium {
  border-radius: 50%;
  width: 50px;
}

.img__round-small {
  border-radius: 50%;
  width: 30px;
}

.small__text {
  font-size: small;
  font-weight: 700;
}
.smaller__text {
  font-size: smaller;
  font-weight: 700;
  margin-right: 30px;
}

.icon-absolute {
  position: absolute;
  right: 0;
}



/* from here */

.flex {
  display: flex;
}
/* flex를 많이 해주는 것 같아서 따로 위로 뺴놓음 */





/* 여기서부터 직접적인 코드 */


body { 
  /* 조금더 포괄적인 것 추가하기 */
  /* border: 1px black solid DBDBDB; */
  width: 95vw;
  height: 100vh;
  margin: 10px auto;
}

.icon {
  font-size: 1.5rem;
  margin-right: 15px;
  ;
}
/* 아이콘 사이즈 통일 class 명인 icon을 i의 클래스로 추가해주면서 사이즈 동일하게 한다. */

.container { 
  width: 60%;
  height: 100%;
  margin: 0 auto;
  background-color: #FAFAFA;
  /* border: 1px black solid; */
}

nav { 
  height: 7%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid #FAEAEA;
  margin-bottom: 10px;
}
/* 일일이 패딩과 마진을 주면 responsive이 안될 것 같아서 박스를 만들어줘서 상위 요소에 display:flex를 해줘서 자식 요소에서 space around 사용 */
/* 그래서 html에 nav 안에 3개의 div가 있는 이유 */
.first__box {
  width: 25%;
  justify-content: space-evenly;
}

.first__box > h1 { 
  border-left: 1px lightgray solid;
  padding-left: 15px;
}

.second__box {
position: relative;
padding-left: 100px;
}

.input_search {
  position: absolute;
  padding-left: 3px;
  top: 6px;
}


.second__box > input {
  border-radius: 10px;
  padding: 6px 20px;
}

/* placeholder도 텍스트로 취급이 뒤는구나.. 갓잇 아니였다!! */


.third__box{
  width: 30%;
  padding-left: 100px;
}


h1 { 
  font-family: 'Lobster', cursive;
}


/* main */
main {
  width: 100%;
  /* height: 100%; */
  display: grid;
  grid-template-columns: 1.9fr 1.1fr;
  grid-template-rows: 60px 30px 240px 240px;
}
/* 이렇게 계속 100퍼센트로 부모 요소의 크기를 봐가면서 하는게 효율적인건지..? */

.feeds__stories {
  grid-row: 1/3;
  padding: 20px;
  display: flex;
  justify-content:center;
  align-items: center;
  position: relative;
  border: 1px solid #DBDBDB;
  border-radius: 6px;
  width: 96.5%
}

.feeds__story{
margin: 5px 15px 0px 0px;

}

.new-feed {
  position: absolute;
  top: -10px;
  right: 80px;
  background-color: #8E8E8E;
  padding: 5px 8px;
  border-radius: 10px;
  font-weight: 500;
}

.feeds{
  grid-row: 3/7;
  margin: 20px 20px 0 0;
  border: 1px solid #DBDBDB;
  border-radius: 6px;
  height: auto;
}

.feeds__name {
  margin: 10px;
  
}

.feeds__input {
  border-top: 1px solid #DBDBDB;
  padding: 10px;
  position: relative;
  display: flex;
  align-items: center;
}

.feed__input {
  background-color: white;
  width: 70%;
}

.article__img {
  height: 400px;
}

.push__icon{
  margin: 10px 0px 3px 10px;
  position: relative;
}

.main-right{
  grid-column: 2/3;
}

.profile{
  margin-top: 30px;
  display: flex;
  height: 60px;
  justify-content:flex-start;
  align-items: center;
  position: relative;
}

.story__profile{
  display: flex;
  height: 40px;
  justify-content:flex-start;
  align-items: center;
  position: relative;
}

.repl-setting { 
  font-size: small;
  margin: 10px 0px 10px 10px;
}

.pt__up, .pt__down {
  font-size: small;
  margin-left: 10px;
}

.pt__down{ 
  color: #8E8E8E ;
}

.button-style {
  color: #6FBBF7;
  position: absolute;
  right: 30px;
}

.transition{
position: absolute;
right: 10px;
color: #6FBBF7;
}

.story__names {
  display: flex;
  font-weight: 700;
  justify-content: space-between;
  margin-top: 10px;
}
/* .profile__text{
  width:
} */

/* .transition {
  display: flex;

} */

/* 알게된 것 여기서 국한된 것일 수도 해상도가 차이난다 tag로 넣는거라 css로 넣는거랑ㅇ */

/* 2fr : 1fr 그리드 사용시 width를 주는데... 오른쪽으로 커지는게 아니라 왼쪽으로 커진다.  */
/* 실수.. 구역을 재 지정해주면 왼쪽으로 커져서 침범해서 그냥 flex의 justify-content로 벌려주었따. */
/* -> template-areas를 정확히 찾아봐야겠다. */

.story {
  width: 100%;
  height: 240px;
}

.recommendation {

  width: 100%;
  height: 240px;
  color: #D4D4D4;
  
}

.repl {
  margin: 10px;
}

.repl-section {
  width: 100%;
  height: 100px;
  overflow: hidden;
  overflow-y: scroll;
}